# Configuración Netlify - TuPatrimonio Web App  
# Sitio: app.tupatrimonio.app
# Purpose: Dashboard, autenticación, funcionalidad privada

[build]
  # IMPORTANTE: Como Package directory es apps/web en Netlify UI,
  # los comandos se ejecutan desde la raíz del monorepo
  command = "npm run build:web"
  publish = "apps/web/.next"
  
  [build.environment]
    NODE_VERSION = "20"
    NEXT_TELEMETRY_DISABLED = "1"

# Headers de seguridad para aplicación privada
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Headers específicos para dashboard (privado)
[[headers]]
  for = "/dashboard/*"
  [headers.values]
    X-Robots-Tag = "noindex, nofollow"
    Cache-Control = "private, no-cache, no-store"

# Headers para PWA - Service Worker
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Service-Worker-Allowed = "/"
    Content-Type = "application/javascript"

# Headers para PWA - Manifest
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Content-Type = "application/manifest+json"
    Cache-Control = "public, max-age=3600"

# Headers para PWA - Version
[[headers]]
  for = "/version.json"
  [headers.values]
    Content-Type = "application/json"
    Cache-Control = "no-cache, no-store, must-revalidate"

# Headers para PWA - Íconos
[[headers]]
  for = "/icons/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Headers para páginas de autenticación
[[headers]]
  for = "/login/*"
  [headers.values]
    Cache-Control = "no-store, max-age=0"

[[headers]]
  for = "/auth/*"
  [headers.values]
    Cache-Control = "no-store, max-age=0"

# Redirects para rutas de autenticación
[[redirects]]
  from = "/signin"
  to = "/login"
  status = 301

[[redirects]]
  from = "/signup" 
  to = "/login"
  status = 301

[[redirects]]
  from = "/register"
  to = "/login"
  status = 301

# Redirect desde raíz basado en autenticación
# Si hay cookie de sesión, ir al dashboard
[[redirects]]
  from = "/"
  to = "/dashboard"
  status = 200
  conditions = {Cookie = ["sb-*"]}

# Si no hay sesión, ir al login
[[redirects]]
  from = "/"
  to = "/login"
  status = 200

# Proteger rutas que requieren autenticación
[[redirects]]
  from = "/dashboard/*"
  to = "/login"
  status = 302
  conditions = {Cookie = ["!sb-*"]}

# Manejo de 404 para SPA
[[redirects]]
  from = "/*"
  to = "/404"
  status = 404